class Solution {
    public int minOperations(int[] nums, int k) {
        int n = nums.length;
        HashSet<Integer> set = new HashSet<>();
        for(int i =0;i<n;i++){
            if(k > nums[i]){
               return -1;
            }
            set.add(nums[i]);
        }
        if(set.contains(k)){
            return set.size()-1;
        }
        return set.size();
    }
}


***************************** OPTIMISED SOLUTION ***************************************

class Solution {
    public int minOperations(int[] nums, int k) {
        int n = nums.length;
        boolean is[] = new boolean[101];
        int count=0;
        for(int i =0;i<n;i++){
            if(k > nums[i]){
               return -1;
            }
            if(is[nums[i]]==false && nums[i]!=k){
                is[nums[i]]=true;
                count++;
            }
        }
        return count;
        
    }
}
