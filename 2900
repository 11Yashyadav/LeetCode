class Solution {
    public List<String> getLongestSubsequence(String[] words, int[] groups) {
        int n = words.length;
        ArrayList<String> one = new ArrayList<>();
        int pre =-1;
        for(int i =0;i<n;i++){
            if(pre==-1 && groups[i]==1){
                one.add(words[i]);
                pre=1;
            }
            if(pre==1 && groups[i]==0){
                one.add(words[i]);
                pre=0;
            }
            if(pre==0 && groups[i]==1){
                one.add(words[i]);
                pre=1;
            }
        }
        pre=-1;
        ArrayList<String> zero = new ArrayList<>();
        for(int i =0;i<n;i++){
            if(pre==-1 && groups[i]==0){
                zero.add(words[i]);
                pre=0;
            }
            if(pre==1 && groups[i]==0){
                zero.add(words[i]);
                pre=0;
            }
            if(pre==0 && groups[i]==1){
                zero.add(words[i]);
                pre=1;
            }
        }
        if(one.size()> zero.size()){
            return one;
        }
        else{
            return zero;
        }
    }
}
