class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> ar = new ArrayList<>();
        
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {
            return ar;
        }
        
        int top = 0, left = 0;
        int right = matrix[0].length - 1;
        int bottom = matrix.length - 1;
        
        while (top <= bottom && left <= right) {
            // Traverse from left to right
            for (int i = left; i <= right; i++) {
                ar.add(matrix[top][i]);
            }
            top++;
            
            // Traverse from top to bottom
            for (int j = top; j <= bottom; j++) {
                ar.add(matrix[j][right]);
            }
            right--;
            
            // Make sure we are now on a different row
            if (top <= bottom) {
                // Traverse from right to left
                for (int k = right; k >= left; k--) {
                    ar.add(matrix[bottom][k]);
                }
                bottom--;
            }
            
            // Make sure we are now in a different column
            if (left <= right) {
                // Traverse from bottom to top
                for (int l = bottom; l >= top; l--) {
                    ar.add(matrix[l][left]);
                }
                left++;
            }
        }
        
        return ar;
    }
}
