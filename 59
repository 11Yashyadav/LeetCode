class Solution {
    public int[][] generateMatrix(int n) {
        int count =1;
        if (n==0) {
            return null;
        }
        int [][] matrix = new int[n][n];
        int top = 0, left = 0;
        int right = matrix.length - 1;
        int bottom = matrix.length - 1;
        
        while (top <= bottom && left <= right) {
            // Traverse from left to right
            for (int i = left; i <= right; i++) {
                (matrix[top][i])=count;
                count++;
            }
            top++;
            
            // Traverse from top to bottom
            for (int j = top; j <= bottom; j++) {
                (matrix[j][right])=count;
                count++;
            }
            right--;
            
            // Make sure we are now on a different row
            if (top <= bottom) {
                // Traverse from right to left
                for (int k = right; k >= left; k--) {
                    (matrix[bottom][k])=count;
                count++;
                }
                bottom--;
            }
            
            // Make sure we are now in a different column
            if (left <= right) {
                // Traverse from bottom to top
                for (int l = bottom; l >= top; l--) {
                    (matrix[l][left])=count;
                count++;
                }
                left++;
            }
        }
        
        return matrix;
    }
}
