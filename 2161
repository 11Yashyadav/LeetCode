************************************** USING SINGLE ARRAY **********************************

class Solution {
    public int[] pivotArray(int[] nums, int pivot) {
        int n=nums.length;
        int m=0;
        int[] ans=new int[n];
        for(int i=0;i<n;i++){
            if(nums[i]<pivot){
                ans[m]=nums[i];
                m++;
            }
        }
        for(int i=0;i<n;i++){
            if(nums[i]==pivot){
                ans[m]=nums[i];
                m++;
            }
        }
        for(int i=0;i<n;i++){
            if(nums[i]>pivot){
                ans[m]=nums[i];
                m++;
            }
        }
        return ans;
    }
}

************************** USING ARRAYLIST***************************************
class Solution {
    public int[] pivotArray(int[] nums, int pivot) {
        int n = nums.length;
        ArrayList<Integer> less = new ArrayList<>();
        ArrayList<Integer> equal = new ArrayList<>();
        ArrayList<Integer> greater = new ArrayList<>();
        
        for (int i = 0; i < n; i++) {
            if (nums[i] > pivot) {
                greater.add(nums[i]);
            } else if (nums[i] == pivot) {
                equal.add(nums[i]);
            } else {
                less.add(nums[i]);
            }
        }
        
        int k = 0;
        for (int i = 0; i < less.size(); i++) {
            nums[k++] = less.get(i);
        }
        for (int i = 0; i < equal.size(); i++) {
            nums[k++] = equal.get(i); 
        }
        for (int i = 0; i < greater.size(); i++) {
            nums[k++] = greater.get(i); 
        }
        
        return nums;
    }
}
