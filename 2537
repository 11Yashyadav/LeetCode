class Solution {
    public long countGood(int[] nums, int k) {
        int n = nums.length;
        long ans = 0;
        int left = 0;
        long pairCount = 0;
        Map<Integer, Integer> freq = new HashMap<>();

        for (int right = 0; right < n; right++) {
            int count = freq.getOrDefault(nums[right], 0);
            pairCount += count;
            freq.put(nums[right], count + 1);

            while (pairCount >= k) {
                ans += n - right;
                int leftCount = freq.get(nums[left]);
                pairCount -= (leftCount - 1);
                freq.put(nums[left], leftCount - 1);
                left++;
            }
        }
        return ans;
    }
}
