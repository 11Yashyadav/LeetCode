class Solution {
    public int maxDiff(int num) {
        int rem = num;
        int fnine =-1;
        int first =-1;
        ArrayList<Integer> arr = new ArrayList<>();

        while(rem>0){
            int cur = rem%10;
            arr.add(cur);
            rem = rem / 10;
        }
        Collections.reverse(arr);
        first = arr.get(0);
        if(first==1){
            for(int i =1;i<arr.size();i++){
            int cur = arr.get(i);
            if(cur!=1 && cur!=0){
                first=cur;
                break;
            }  
        }
        }
       
        for(int i =0;i<arr.size();i++){
            if(arr.get(i)!=9 ){
                fnine=arr.get(i);
                break;
            }
        }

        if(fnine==-1){
            int ans=0;
            for(int i =0;i<arr.size();i++){
            ans=ans*10+8;
            }
            return ans;
        }
        int max=0,min=0;
        for(int i =0;i<arr.size();i++){
            int cur = arr.get(i);
            if(cur==fnine){
                cur=9;
            }
            max=max*10+cur;
        }
        if(first==arr.get(0)){
for(int i =0;i<arr.size();i++){
            int cur = arr.get(i);
            if(cur==first){
                cur=1;
            }
            min=min*10+cur;
        }
        }
        else{
            for(int i =0;i<arr.size();i++){
            int cur = arr.get(i);
            if(cur==first){
                cur=0;
            }
            min=min*10+cur;
        }
        }
         
        return max-min;
    }
}
