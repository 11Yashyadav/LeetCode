class Solution {
    public double maxAverageRatio(int[][] classes, int extraStudents) {
        PriorityQueue<double[]> queue = new PriorityQueue<>((a, b) -> Double.compare(b[0], a[0]));
        for(int[] cls: classes) {
            double pass = cls[0], total = cls[1];
            double gain = calculateGains(pass, total);
            queue.offer(new double[] {gain, pass, total});
        }   
        while(--extraStudents >= 0) {
            double[] curr = queue.poll();
            curr[1] += 1;
            curr[2] += 1;
            curr[0] = calculateGains(curr[1], curr[2]);
            queue.offer(curr);
        }
        double totalAvg = 0;
        while(!queue.isEmpty()) {
            double[] curr = queue.poll();
            totalAvg +=  curr[1] / curr[2];
        }
        return totalAvg / classes.length;
    }
    private double calculateGains(double pass, double total) {
        return (double)((pass+1)/(total+1)) - (double) (pass/total);
    }
}
