/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(k==0|| head==null){
            return head;
        }
        ArrayList<Integer> result= new ArrayList<>();
        ListNode temp = head;
        while(temp!=null){
            result.add(temp.val);
            temp=temp.next;
        }
        k=k%result.size();
        if (k == 0) {
            return head;
        }
        temp=head;
        int count=0;
        while(temp!=null){
            if(k>0){
                temp.val=result.get(result.size()-k);
                k--;
                temp=temp.next;
            }
            else{
                temp.val=result.get(count);
                count++;
                temp=temp.next;
            }
        }
        return head;
    }
}
