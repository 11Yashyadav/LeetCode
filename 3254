********************** brute force**************************************
class Solution {
    public int[] resultsArray(int[] nums, int k) {
        int n = nums.length;
        int[] results = new int[n - k + 1];
        for (int i = 0; i <= n - k; i++) {
            int[] subarray = Arrays.copyOfRange(nums, i, i + k);
            if (isConsecutiveAndSorted(subarray)) {
                results[i] = subarray[k - 1];
            } else {
                results[i] = -1;
            }
        }
        return results;
    }
    private static boolean isConsecutiveAndSorted(int[] subarray) {
        for (int i = 1; i < subarray.length; i++) {
            if (subarray[i] != subarray[i - 1] + 1) {
                return false;
            }
        }
        return true;
    }
}
**************** little optimise *****************************************
class Solution {
    public int[] resultsArray(int[] nums, int k) {
        int n = nums.length;
        int[] results = new int[n - k + 1];
        for (int i = 0; i <= n - k; i++) {
            boolean is = true;
            for (int j = i; j < i + k - 1; j++) {
                if (nums[j] + 1 != nums[j + 1]) {
                    is = false;
                    break;
                }
            }
            results[i] = is ? nums[i + k - 1] : -1;
        }
        return results;
    }
}
