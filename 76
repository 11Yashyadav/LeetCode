class Solution {
    public String minWindow(String s, String t) {
        if (s.length() == 0 || t.length() == 0) return "";

        Map<Character, Integer> fre = new HashMap<>();
        for (char c : t.toCharArray()) {
            fre.put(c, fre.getOrDefault(c, 0) + 1);
        }

        Map<Character, Integer> wfre = new HashMap<>();
        int req = fre.size();
        int formed = 0;

        int l = 0, r = 0;
        int[] ans = {-1, 0, 0}; // length, left, right

        while (r < s.length()) {
            char c = s.charAt(r);
            wfre.put(c, wfre.getOrDefault(c, 0) + 1);

            if (fre.containsKey(c) && wfre.get(c).intValue() == fre.get(c).intValue()) {
                formed++;
            }

            while (l <= r && formed == req) {
                if (ans[0] == -1 || r - l + 1 < ans[0]) {
                    ans[0] = r - l + 1;
                    ans[1] = l;
                    ans[2] = r;
                }

                char leftChar = s.charAt(l);
                wfre.put(leftChar, wfre.get(leftChar) - 1);
                if (fre.containsKey(leftChar) && wfre.get(leftChar).intValue() < fre.get(leftChar).intValue()) {
                    formed--;
                }
                l++;
            }
            r++;
        }

        return ans[0] == -1 ? "" : s.substring(ans[1], ans[2] + 1);
    }
}
