
class Solution {
    private List<Integer> generateRow(int rows) {
        List<Integer> ansRow = new ArrayList<>();
        int ans = 1;
        for (int col = 0; col <= rows; col++) {
            ansRow.add(ans);
            ans = ans * (rows - col) / (col + 1);
        }
        return ansRow;
    }

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList<>();
        for (int i = 0; i < numRows; i++) {
            ans.add(generateRow(i));
        }
        return ans;
    }
}

************************************************************************************

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList<>();
        for(int i =0;i<numRows;i++){
            List<Integer> a = new ArrayList<>();
            a.add(1);
            if(i==0){
                ans.add(a);
            }
            else{
                List<Integer> pre = ans.get(ans.size()-1);
                for(int j=1;j<pre.size();j++){
                    a.add(pre.get(j)+pre.get(j-1));
                }
                a.add(1);
                ans.add(a);
                
            }
        }
        return ans;

    }
}
