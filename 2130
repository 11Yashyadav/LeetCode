/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int pairSum(ListNode head) {
        int [] arr = new int[100001];
        int c =0;
        while(head!=null){
            arr[c++]=(head.val);
            head = head.next;
        }
        int ans =-1;
        for(int i =0;i<c+1/2;i++){
            ans = Math.max(arr[i]+arr[c-1-i],ans);
        }
        return ans;
    }
}

******************* alternative solution  ***************************
class Solution {
    public int pairSum(ListNode head) {
        ArrayList<Integer> arr = new ArrayList<>();
        while(head!=null){
            arr.add(head.val);
            head = head.next;
        }
        int n = arr.size();
        int ans =-1;
        for(int i =0;i<n+1/2;i++){
            ans = Math.max(arr.get(i)+arr.get(n-1-i),ans);
        }
        return ans;
    }
}
