/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    int postIndex;
    int inIndex;

    public TreeNode buildTree(int[] inorder, int[] postorder) {
        postIndex = postorder.length-1;
        inIndex = inorder.length-1;
        return helper(inorder, postorder, Integer.MIN_VALUE);

    }

    private TreeNode helper(int[] inorder, int[] postorder, int stopValue) {
        if (postIndex < 0) {
            return null;
        }

        if (inorder[inIndex] == stopValue) {
            inIndex--;
            return null;
        }

        TreeNode root = new TreeNode(postorder[postIndex]);
        postIndex--;
        root.right = helper(inorder, postorder, root.val);
        root.left = helper(inorder, postorder, stopValue);
        return root;
    }
}
